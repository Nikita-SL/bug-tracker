name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  unit-tests-be:
    runs-on: ubuntu-latest    
    outputs:
      coverage:  ${{ steps.test-be.outputs.report }}
    steps: 
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with: 
          go-version: "1.21"
          cache-dependency-path: bugtracker-backend/go.sum

      - name: Install go-junit-report
        run: go install github.com/jstemmer/go-junit-report/v2@latest

      - name: Execute BE Unit Tests
        id: test-be
        working-directory: ./bugtracker-backend
        run: |

          go test -json -coverprofile coverage.out -covermode atomic ./...
          go tool cover -func=coverage.out > coverage.txt


          echo "## Go Test Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat coverage.txt >> $GITHUB_STEP_SUMMARY 
          echo '```' >> $GITHUB_STEP_SUMMARY

          echo "report<<EOF" >> $GITHUB_OUTPUT
          cat coverage.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          GOCACHE=/tmp/go-cache go test -v ./... 2>&1 | go-junit-report > test-results.xml

      - name: Publish BE test results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: BE Unit Tests Report
          path: bugtracker-backend/test-results.xml
          reporter: jest-junit

  unit-tests-fe:
    runs-on: ubuntu-latest
    outputs:
      coverage: ${{ steps.test-fe.outputs.report }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: bugtracker-frontend/package-lock.json

      - name: Execute FE unit tests
        id: test-fe
        working-directory: ./bugtracker-frontend
        run: |
          npm ci
          npm test | tee full_output.txt

          echo "## FE Test Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat full_output.txt >> $GITHUB_STEP_SUMMARY 
          echo '```' >> $GITHUB_STEP_SUMMARY

          echo "report<<EOF" >> $GITHUB_OUTPUT
          cat full_output.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Publish FE Test Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: FE Unit Tests REport
          path: bugtracker-frontend/test-results.xml
          reporter: jest-junit


  create-coverage-comment:
    if: github.event_name == 'pull_request'
    needs: [unit-tests-be, unit-tests-fe]
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Create BE Coverage Comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## BE Test Coverage Report
            ```
            ${{ needs.unit-tests-be.outputs.coverage }}
            ```

      - name: Create FE coverage Comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## FE Test Coverage Report
            ```
            ${{ needs.unit-tests-fe.outputs.coverage }}
            ```
    
  api-e2e-tests:
    needs: [unit-tests-be, unit-tests-fe]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Launch App
        run: |
          docker compose up --build -d
          npx wait-port http://localhost:8080/api/health -t 30000  

      - name: Run API Tests
        working-directory: ./tests-api
        run: |
          npm ci
          npx playwright test

      - name: Upload API Tests Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-tests-results
          path: ./tests-api/test-results/
          retention-days: 30

      - name: Run E2E Tests
        working-directory: ./tests-e2e
        env:
          CI: "1"
        run: |
          npm ci
          npx playwright install
          npx playwright test

      - name: Stop App
        run: docker compose down

      - name: Upload API Tests Playwright Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-tests-results-playwright-report
          path: ./tests-api/playwright-report
          retention-days: 30


      - name: Publish API Tests Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: API Tests Results
          path: ./tests-api/test-results/*.xml
          reporter: jest-junit